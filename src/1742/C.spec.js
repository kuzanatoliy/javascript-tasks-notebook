const { getLastPaint } = require('./C');

describe('1742C. Stripes', () => {
  it.each`
    n    | matrix                                                                                                                                                                                                                                                                                                                                              | result
    ${1} | ${[['.', '.', '.', '.', 'B', '.', '.', '.'], ['.', '.', '.', '.', 'B', '.', '.', '.'], ['.', '.', '.', '.', 'B', '.', '.', '.'], ['R', 'R', 'R', 'R', 'R', 'R', 'R', 'R'], ['.', '.', '.', '.', 'B', '.', '.', '.'], ['.', '.', '.', '.', 'B', '.', '.', '.'], ['.', '.', '.', '.', 'B', '.', '.', '.'], ['.', '.', '.', '.', 'B', '.', '.', '.']]} | ${'R'}
    ${2} | ${[['R', 'R', 'R', 'R', 'R', 'R', 'R', 'B'], ['B', '.', '.', '.', '.', '.', '.', 'B'], ['B', '.', '.', '.', '.', '.', '.', 'B'], ['B', '.', '.', '.', '.', '.', '.', 'B'], ['B', '.', '.', '.', '.', '.', '.', 'B'], ['B', '.', '.', '.', '.', '.', '.', 'B'], ['B', '.', '.', '.', '.', '.', '.', 'B'], ['R', 'R', 'R', 'R', 'R', 'R', 'R', 'B']]} | ${'B'}
    ${3} | ${[['R', 'R', 'R', 'R', 'R', 'R', 'B', 'B'], ['.', 'B', '.', 'B', '.', '.', 'B', 'B'], ['R', 'R', 'R', 'R', 'R', 'R', 'B', 'B'], ['.', 'B', '.', 'B', '.', '.', 'B', 'B'], ['.', 'B', '.', 'B', '.', '.', 'B', 'B'], ['R', 'R', 'R', 'R', 'R', 'R', 'B', 'B'], ['.', 'B', '.', 'B', '.', '.', 'B', 'B'], ['.', 'B', '.', 'B', '.', '.', 'B', 'B']]} | ${'B'}
    ${4} | ${[['.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.'], ['R', 'R', 'R', 'R', 'R', 'R', 'R', 'R'], ['.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.']]} | ${'R'}
  `('Base test: $n', ({ matrix, result }) => {
    expect(getLastPaint(matrix)).toBe(result);
  });
});
